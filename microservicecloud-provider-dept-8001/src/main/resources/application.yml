# 该服务端口为8001
server:
  port: 8001

# 整合mybatis
mybatis:
  # mybatis配置文件所在路径。其实内容已经写进spring了，这里面没啥东西了。可以开启二级缓存进行优化。
  config-location: classpath:mybatis/mybatis.cfg.xml
  # 所有Entity别名类所在包
  type-aliases-package: com.zzw.entities
  # mapper映射文件，如DeptMapper.xml
  mapper-locations:
  - classpath:mybatis/mapper/**/*.xml


spring:
  application:
    # 重要，用于部署服务，对外暴露的微服务名字，默认变为全大写
    name: microservicecloud-dept
  # alibaba类似jdbc的配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: org.gjt.mm.mysql.Driver              # mysql驱动包
    url: jdbc:mysql://localhost:3306/cloudDB01              # 数据库名称
    username: root
    password: root
    dbcp2:
      min-idle: 5                                           # 数据库连接池的最小维持连接数
      initial-size: 5                                       # 初始化连接数
      max-total: 5                                          # 最大连接数
      max-wait-millis: 200                                  # 等待连接获取的最大超时时间

eureka:
  client: #客户端注册进eureka服务列表内
    service-url:
#      注册进的服务的默认地址
      defaultZone: http://localhost:7001/eureka
#      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
#  修改注册中心显示的服务实例名称，方便定位具体机器，也便于定位ip
  instance:
    instance-id: microservicecloud-dept8001
    prefer-ip-address: true     #访问路径可以显示IP地址

# 追加关于微服务信息的描述，点开服务报告时可见
info:
  app.name: zzw-microservicecloud
  company.name: www.zzw.com
# 可灵活添加的部分，$$之间的就是pom中maven-resources插件来进行填充和配置的
# 在这里配置之后再显示就可以自动填充项目信息了
  build.artifactId: $project.artifactId$
  build.version: $project.version$

